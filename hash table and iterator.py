"""Хеш-таблицы– это особые структуры данных, подобные ассоциативным массивам.
Ключами в них могут выступать не только числа, но и другие объекты. Однако есть
одно важное условие. Для каждого ключа требуется вычислить особый уникальный
код. Этим занимаются специальные функции."""

"""Хеш-функции получают на входе данные разного объема, а возвращают хеш 
фиксированной длины. Набор данных может пройти через такую функцию много 
раз, но результат для него будет одинаковым. И наоборот, для наборов, 
отличающихся хотя бы одним символом, коды всегда разные.
Не каждую порцию данных можно хешировать. Возьмем, например, список, 
изменяющийся в процессе работы программы. В разные моменты времени его хеш 
будет разным.
Часто говорят, что изменяемые объекты Python в принципе нельзя хешировать, а 
неизменяемые – всегда можно. На самом деле, возможность хешировать объект и 
его неизменяемость – понятия разные."""

"""Свойства хеш-таблицы Важное свойство хеш-таблиц состоит в том, что, при некоторых разумных допущениях, 
все три операции (поиск, вставка, удаление элементов) в среднем выполняются за время {\displaystyle O(1)}O(1). Но при 
этом не гарантируется, что время выполнения отдельной операции мало́. Это связано с тем, что при достижении 
некоторого значения коэффициента заполнения необходимо осуществлять перестройку индекса хеш-таблицы: увеличить 
значение размера массива {\displaystyle H}H и заново добавить в пустую хеш-таблицу все пары. 

Разрешение коллизий
Существует несколько способов разрешения коллизий.

Метод цепочек

Разрешение коллизий при помощи цепочек. Каждая ячейка массива H является указателем на связный список (цепочку) пар 
ключ-значение, соответствующих одному и тому же хеш-значению ключа. Коллизии просто приводят к тому, что появляются 
цепочки длиной более одного элемента. 

Операции поиска или удаления элемента требуют просмотра всех элементов соответствующей ему цепочки, чтобы найти в ней 
элемент с заданным ключом. Для добавления элемента нужно добавить элемент в конец или начало соответствующего списка 
и в случае, если коэффициент заполнения станет слишком велик, увеличить размер массива H и перестроить таблицу. 

При предположении, что каждый элемент может попасть в любую позицию таблицы H с равной вероятностью и независимо от 
того, куда попал любой другой элемент, среднее время работы операции поиска элемента составляет Θ(1 + α), 
где α — коэффициент заполнения таблицы. """

# Что такое итератор?

"""Итератор —интерфейс, предоставляющий доступ к элементам коллекции (массива 
или контейнера) и навигацию по ним. В различных системах итераторы могут иметь 
разные общепринятые названия. В терминах систем управления базами 
данных итераторы называются курсорами. В простейшем случае итератором в 
низкоуровневых языках является указатель.
В чём разница между итератором и генератором?
Эти термины тесно связаны (любой генератор — это итератор), их довольно часто 
путают, что иногда приводит к недопониманию.Итератор — более общая 
концепция. Это объект, у которого определены два 
метода:__next__и__iter__.С другой стороны, генератор — это итератор. Но не 
наоборот. Генератор может получаться использованием ключевого слова yield в 
теле функции."""


def squares(start, stop):
    for i in range(start, stop):
        yield i * i


generator = squares(a, b)
